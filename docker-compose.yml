version: '3.2'
services:
  frontend:
    build: frontend
    ports:
      - '20080:80'
    volumes:
      - '~/.composer-docker/cache:/root/.composer/cache:delegated'
      - './:/app'
  backend:
    build: backend
    ports:
      - '21080:80'
    volumes:
      - '~/.composer-docker/cache:/root/.composer/cache:delegated'
      - './:/app'
  pgsql:
    # build:
    #   context: docker/pgsql
    #   args:
    #     - POSTGRES_DB=${POSTGRES_DB}
    #     - POSTGRES_USER=${POSTGRES_USER}
    #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    image: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./data:/data
      - pgsql:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d yii2advanced -U yii2advanced"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  pgsql: